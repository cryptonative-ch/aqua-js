/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Provider } from '@ethersproject/providers'
import { Contract, Signer } from 'ethers'

import type { TemplateLauncher as TemplateLauncherClass } from './TemplateLauncher'
import type { SaleLauncher as SaleLauncherClass } from './SaleLauncher'
import type { AquaFactory as AquaFactoryClass } from './AquaFactory'
import type { FixedPriceSaleTemplate as FixedPriceSaleTemplateClass } from './FixedPriceSaleTemplate'
import type { FairSaleTemplate as FairSaleTemplateClass } from './FairSaleTemplate'
import type { FixedPriceSale as FixedPriceSaleClass } from './FixedPriceSale'
import type { FairSale as FairSaleClass } from './FairSale'

// Import ABIs
import { TemplateLauncherABI } from './abis/TemplateLauncher'
import { SaleLauncherABI } from './abis/SaleLauncher'
import { AquaFactoryABI } from './abis/AquaFactory'
import { FixedPriceSaleTemplateABI } from './abis/FixedPriceSaleTemplate'
import { FairSaleTemplateABI } from './abis/FairSaleTemplate'
import { FixedPriceSaleABI } from './abis/FixedPriceSale'
import { FairSaleABI } from './abis/FairSale'

export namespace Contracts {
  export class AquaFactory {
    static connect(address: string, signerOrProvider: Signer | Provider): AquaFactoryClass {
      return new Contract(address, AquaFactoryABI, signerOrProvider) as AquaFactoryClass
    }
  }
  export class TemplateLauncher {
    static connect(address: string, signerOrProvider: Signer | Provider): TemplateLauncherClass {
      return new Contract(address, TemplateLauncherABI, signerOrProvider) as TemplateLauncherClass
    }
  }
  export class SaleLauncher {
    static connect(address: string, signerOrProvider: Signer | Provider): SaleLauncherClass {
      return new Contract(address, SaleLauncherABI, signerOrProvider) as SaleLauncherClass
    }
  }
  export class FixedPriceSale {
    static connect(address: string, signerOrProvider: Signer | Provider): FixedPriceSaleClass {
      return new Contract(address, FixedPriceSaleABI, signerOrProvider) as FixedPriceSaleClass
    }
  }
  export class FairSale {
    static connect(address: string, signerOrProvider: Signer | Provider): FairSaleClass {
      return new Contract(address, FairSaleABI, signerOrProvider) as FairSaleClass
    }
  }
  export class FairSaleTemplate {
    static connect(address: string, signerOrProvider: Signer | Provider): FairSaleTemplateClass {
      return new Contract(address, FairSaleTemplateABI, signerOrProvider) as FairSaleTemplateClass
    }
  }
  export class FixedPriceSaleTemplate {
    static connect(address: string, signerOrProvider: Signer | Provider): FixedPriceSaleTemplateClass {
      return new Contract(address, FixedPriceSaleTemplateABI, signerOrProvider) as FixedPriceSaleTemplateClass
    }
  }
}
